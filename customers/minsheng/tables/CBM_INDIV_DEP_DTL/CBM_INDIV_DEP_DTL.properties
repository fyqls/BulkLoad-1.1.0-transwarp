# Test module
#test_tableName=CDR_SMS_TEST
#test_inputDir=hdfs://monkey:8020/tmp/monkey-test/sms_test
#test_outputDir=hdfs://monkey:8020/tmp/hfile/sms_test
#test_indextablename=CDR_SMS_idx_test


# The hbase table name
tableName=CBM_INDIV_DEP_DTL
# The input directory on hdfs
#inputDir=hdfs://transwarp03:8020/tmp/monkey-test/sms
inputDir=/hive1/user/hive/warehouse/cbm_new_data_table
# The test input directory on hdfs
# The output hfile address, the same parameter with the secondary index loading
outputDir=/import_data/cbmdata_output

# MapReduce input format, default is Text
# Text		: For the general text file
# CombineFile	: For the combine file input format
# MultiHFile	: For the multi hfile input format 
inputFormat=Text
#inputFormat=MultiHFile
#inputFormat=CombineFile

# ======== Text File ===================
# The following parameters are just used for TextInputFormat,
# you can comment them when you don't use the TextInfputFormat
mapred_min_split_size=1

# ======= Combine File ==================
# The following two parameters are just used for CombineFile,
# you can comment them when you don't use the CombineFile
# Input split size for single mapper
splitSize=67108864
# If you want to load the file from other hdfs system
isRemote=false

# ========= Multi HFile ====================
# The following parameters are used for MultiHFile,
# you can comment them when you don't use the MultiHFile
# The hbase index table name
# Uset the indextablename as the switch of the secondary index bulk load
#indextablename=CDR_SMS_idx
# The indexed columns
#indexcolumns=e:f
# The indexed table column family
#targetcolumnfamily=f
# The start row
#startrow=
# The stop row
#stoprow=
# The output hfile address for the index table, recently it is useless
#indexOutputDir=hdfs://monkey:8020/tmp/hfile/sms_idx
# The split key of the index table
#indexSplitKeySpec=00,99
# Whether just insert the secondary index from existed hfiles or 
# insert the secondary index with the insertion of hfiles

 

# How the input file is formated
textRecordSpec=ITL_ACT,DM_SEQ,TXN_SEQ_NUM,TXN_NUM,BIL_YM_DTE,OVE_DTE,TXN_DTE,ACT_NUM,TXN_TME,TXN_TYP_CD,TXN_CNL_CD,SYS_FLG,TXN_ORG_ID,TXN_SUR,CSR_ID,CRY_CD,DEB_CRE_IND,CAS_TFR_FLG,TXN_AMT,BAL,IVC_BRF,SRV_CODE,PDT_ID,DEB_CTE_KIN,DEB_CTE_NUM,DEB_DM_ACT,CRD_DM_ACT,CRD_CTE_KIN,CRD_CTE_NUM,TXN_ITM_TYP,PO_ID,OPP_CNY_CD,OPP_BNK_CD,OPP_ACT,CHO_IND,INT_DTE,SRC_CRY,SRC_TXN_AMT,SBE_NME,SBE_IDE_TYP_CD,SBE_IDE_NUM,DEB_SAFE_CD,CRD_SAFE_CD,SAFE_APP_CD,BIG_TRANS_TEL,BIG_TRANS_INF,OGL_PYE_ACT,FLU_SEQ,FCHO_TXN_SEQ_NUM,SEQ_STS,DEB_ACT_NME,DEB_BKN_NME,CRD_ACT_NME,CRD_BKN_NME,PRO_SRV_CODE,CHG_ITM_CD,CHANNEL,REMARK,DAY_ACT_IND,NF_IND,ETL_LAD_DTE
#encoding of the input text file. default UTF-8 if otherwise specified
encoding=UTF-8
# Fields delimiter in input file,default "," if not specified
fieldDelimiter=,

# HBase row specification
# The internal filed dielimiter in the hbase table, such as the rowkey c1~c2
rowSpec=rowKey:concat(trim(ACT_NUM),trim(OVE_DTE));f|ITL_ACT:trim(ITL_ACT);f|DM_SEQ:trim(DM_SEQ);f|TXN_SEQ_NUM:trim(TXN_SEQ_NUM);f|TXN_NUM:trim(TXN_NUM);f|BIL_YM_DTE:trim(BIL_YM_DTE);f|TXN_DTE:trim(TXN_DTE);f|TXN_TME:trim(TXN_TME);f|TXN_TYP_CD:trim(TXN_TYP_CD);f|TXN_CNL_CD:trim(TXN_CNL_CD);f|SYS_FLG:trim(SYS_FLG);f|TXN_ORG_ID:trim(TXN_ORG_ID);f|TXN_SUR:trim(TXN_SUR);f|CSR_ID:trim(CSR_ID);f|CRY_CD:trim(CRY_CD);f|DEB_CRE_IND:trim(DEB_CRE_IND);f|CAS_TFR_FLG:trim(CAS_TFR_FLG);f|TXN_AMT:trim(TXN_AMT);f|BAL:trim(BAL);f|IVC_BRF:trim(IVC_BRF);f|SRV_CODE:trim(SRV_CODE);f|PDT_ID:trim(PDT_ID);f|DEB_CTE_KIN:trim(DEB_CTE_KIN);f|DEB_CTE_NUM:trim(DEB_CTE_NUM);f|DEB_DM_ACT:trim(DEB_DM_ACT);f|CRD_DM_ACT:trim(CRD_DM_ACT);f|CRD_CTE_KIN:trim(CRD_CTE_KIN);f|CRD_CTE_NUM:trim(CRD_CTE_NUM);f|TXN_ITM_TYP:trim(TXN_ITM_TYP);f|PO_ID:trim(PO_ID);f|OPP_CNY_CD:trim(OPP_CNY_CD);f|OPP_BNK_CD:trim(OPP_BNK_CD);f|OPP_ACT:trim(OPP_ACT);f|CHO_IND:trim(CHO_IND);f|INT_DTE:trim(INT_DTE);f|SRC_CRY:trim(SRC_CRY);f|SRC_TXN_AMT:trim(SRC_TXN_AMT);f|SBE_NME:trim(SBE_NME);f|SBE_IDE_TYP_CD:trim(SBE_IDE_TYP_CD);f|SBE_IDE_NUM:trim(SBE_IDE_NUM);f|DEB_SAFE_CD:trim(DEB_SAFE_CD);f|CRD_SAFE_CD:trim(CRD_SAFE_CD);f|SAFE_APP_CD:trim(SAFE_APP_CD);f|BIG_TRANS_TEL:trim(BIG_TRANS_TEL);f|BIG_TRANS_INF:trim(BIG_TRANS_INF);f|OGL_PYE_ACT:trim(OGL_PYE_ACT);f|FLU_SEQ:trim(FLU_SEQ);f|FCHO_TXN_SEQ_NUM:trim(FCHO_TXN_SEQ_NUM);f|SEQ_STS:trim(SEQ_STS);f|DEB_ACT_NME:trim(DEB_ACT_NME);f|DEB_BKN_NME:trim(DEB_BKN_NME);f|CRD_ACT_NME:trim(CRD_ACT_NME);f|CRD_BKN_NME:trim(CRD_BKN_NME);f|PRO_SRV_CODE:trim(PRO_SRV_CODE);f|CHG_ITM_CD:trim(CHG_ITM_CD);f|CHANNEL:trim(CHANNEL);f|REMARK:trim(REMARK);f|DAY_ACT_IND:trim(DAY_ACT_IND);f|NF_IND:trim(NF_IND);f|ETL_LAD_DTE:trim(ETL_LAD_DTE)
internalFieldDelimiter=~
# Split key spec generated using RegionSplitKeyUtils.java
splitKeySpec=0102014432,0105014431,0107014432,0110014434,0113014431,0115014470,0118014431,0121014431,0124014431,0127014430,0130014430,0134014430,0136014470,0139014430,0141018460,0147014430,0202014432,0205014433,0208014431,0212014432,0214014431,0218014431,0222014431,0224018460,0228014430,0231018450,0234014430,0238014430,0246014430,0252014430,0302018450,0308014431,0313014432,0317014430,0322018460,0326014430,0333014430,0502014432,0504018460,0508014430,0510018460,0513014430,0516018460,0524014430,0604014431,0611018450,0703018460,0712014430,0801014431,0803014432,0805014430,0811014430,0816014430,0901018450,0905014431,0908018450,0910018460,0915014430,1001018460,1006014470,1011018460,1018014430,1103014430,1106018460,1110014430,1114014430,1202018450,1205014430,1207018460,1211018450,1501014431,1506014430,1511014430,1512014430,1602014430,1607014430,1611014430,1702018450,1801018450,180501443B,1807018450,1811014430,1813018450,1817014430,1821018450,1827014430,1901018450,2001014431,2006014430,2012018450,2101014470,2107014430,2201014430,2209014430,2301014430,2303014430,2304018450,2306018460,2308014430,2601014430,2604018460,2612018460,2705014430,2801014430,2806014430,2903018460,2909014430,3004014430,3101014430,3105014430,3305014430,3501014430,3801014430,4301018460,4602014430,4901018450,5601014430,7201018450

